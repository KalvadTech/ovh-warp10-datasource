{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","Warp10Datasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","lastErrors","options","backend","length","substr","console","log","each","variables","variable","isNaN","current","value","replace","RegExp","method","data","headers","undefined","datasourceRequest","then","parseTemplatingResult","o","map","indice","text","toString","end","convertToWarp10Time","range","to","start","from","queries","targets","bind","target","expr","push","isEmpty","d","defer","resolve","promise","allQueryPromise","query","performTimeSeriesQuery","self","all","allResponse","result","response","index","isArray","warpscriptJsonResponse","metricData","transformMetricData","filter","refId","hide","warpscriptScript","prepareWarpscriptQuery","endISO","convertToISO","startISO","interval","tmp","gts","isGts","className","c","labels","l","key","join","metricName","dps","v","Math","floor","datapoints","Array","splice","propertyIsEnumerable","a","date","parse","timestamp","Date","toISOString","roundUp","isMoment","isDate","time","mathString","parseString","substring","indexOf","ISO_8601","parseDateMath"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nexport class Warp10Datasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.lastErrors = {};\n  }\n\n  // Optional\n  // Required for templating\n  metricFindQuery(options) {\n    \n    var backend = this.url;\n    while (backend[backend.length-1] === '/') {\n      // remove trailing slash\n      backend = backend.substr(0, backend.length - 1);\n    }\n    var url = backend + '/api/v0/exec';\n    \n    console.log(this.templateSrv);\n    _.each(this.templateSrv.variables, function(variable) {\n      if (isNaN(variable.current.value)) {\n        options = options.replace(new RegExp('\\\\$' + variable.name, 'g'), \"'$\" + variable.name + \"'\");\n      }\n    });\n    options = this.templateSrv.replace(options, null, 'regex')\n\n    options = {\n      method: 'POST',\n      url: url,\n      data: options,\n      headers: {\n          'Accept': undefined,\n          'Content-Type': undefined\n      }\n    };\n    return this.backendSrv.datasourceRequest(options).then(this.parseTemplatingResult);\n  }\n  parseTemplatingResult(o) {\n    console.log('tesmplating result', o)\n     return _.map(o.data, (data, indice) => {\n      return { text: data.toString() || indice, value: data};\n    });\n  }\n\n  // Called once per panel (graph)\n  query(options) {\n\n    console.log(\"Query begin\");\n\n    var end = this.convertToWarp10Time(options.range.to);\n    var start = this.convertToWarp10Time(options.range.from);\n    \n    console.log(\"From: \"+start+ \" To: \"+end);\n\n\n    var queries = [];\n\n    console.log(\"Before foreach\");\n\n    _.each(options.targets, _.bind(function(target) {\n\n      console.log(\"Expre\", target.expr);\n      console.log(\"Backend URL\", target.backend);\n\n      queries.push(target);\n    }, this));\n\n    console.log(\"After foreach\");\n\n    // No valid targets, return the empty result to save a round trip.\n    if (_.isEmpty(queries)) {\n\n      console.log(\"Empty query\");\n\n      var d = this.q.defer();\n      d.resolve({ data: [] });\n      return d.promise;\n    }\n\n    var allQueryPromise = _.map(queries, _.bind(function(query) {\n      return this.performTimeSeriesQuery(query, start, end);\n    }, this));\n\n    var self = this;\n    return this.q.all(allQueryPromise)\n      .then(function(allResponse) {\n        var result = [];\n\n        _.each(allResponse, function(response, index) {\n\n          console.log(\"Response\", response);\n          if (response.data.type === 'error') {\n            self.lastErrors.query = response.data.value;\n            throw response.data.value;\n          }\n          delete self.lastErrors.query;\n\n          if (!self.isArray(response.data) || (response.data.length !== 1)) {\n            console.log(\"Response isn't an Array or it has more than 1 element\", response.data);\n            return {};\n          }\n\n          var warpscriptJsonResponse = response.data[0];\n          _.each(warpscriptJsonResponse, function(metricData) {     \n            console.log(\"Metric data\",metricData);\n            result.push(self.transformMetricData(metricData, options.targets[index]));\n          });\n        });\n\n        return { data: result };\n      });\n  \n  }\n\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target),\n        refId: target.refId,\n        hide: target.hide,\n        expr: target.expr,\n        backend: target.backend\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  /* ******************************************************/\n  /* Puts into the Warpscript script a header to place \n  /* start and end ont the stacks\n  /* ******************************************************/\n  performTimeSeriesQuery(query, start, end) {\n\n    var warpscriptScript = this.prepareWarpscriptQuery(query, start, end);\n\n    var backend = this.url;\n    // If we have defined a backend in the query editor, it takes preecedence\n    // over the datasource\n    if ((query.backend !== undefined) && (query.backend.length >0)) {\n      backend = query.backend;\n    }\n\n    while (backend[backend.length-1] === '/') {\n      // remove trailing slash\n      backend = backend.substr(0, backend.length - 1);\n    }\n\n    var url = backend + '/api/v0/exec';\n\n    var options = {\n      method: 'POST',\n      url: url,\n      data: warpscriptScript,\n      headers: {\n          'Accept': undefined,\n          'Content-Type': undefined\n      }\n    };\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  /* ******************************************************/\n  /* Puts into the Warpscript script a header to place \n  /* start and end ont the stack\n  /* ******************************************************/\n  prepareWarpscriptQuery(query, start, end) {\n\n    var endISO = this.convertToISO(end);\n    var startISO = this.convertToISO(start);\n    var interval = end - start;\n\n    var warpscriptScript =\n          \" \" + start + \" 'start' STORE \" + end + \" 'end' STORE \" +\n          \"'\" + startISO + \"' 'startISO' STORE '\" + endISO + \"' 'endISO' STORE \" +\n          interval + \" 'interval' STORE\";\n    _.each(this.templateSrv.variables, function(variable) {\n      var tmp = variable.current.text;\n      if( isNaN(variable.current.text) ) {\n        // It's a string\n        tmp = \"'\" + variable.current.text + \"'\";\n      }\n      warpscriptScript += \"\\n\" + tmp + \" '\"+variable.name+\"' STORE\";\n    });\n    if (query.expr !== undefined) {\n      warpscriptScript += \" \" + query.expr;\n    }\n    return warpscriptScript;\n  }\n\n  /* ******************************************************/\n  /* Transform from Warpscript JSON to Grafana dps\n  /* ******************************************************/\n  transformMetricData(gts) {\n\n    if (!this.isGts(gts)) {\n      console.log(\"Response item isn't a gts\",gts);\n      return;\n    }\n\n    var className = gts.c;\n\n    var labels =\n      _.map(gts.l, function(value, key) {\n        return key+\"=\"+value;\n      }).join(\",\");\n\n    var metricName = className+\"{\"+labels+\"}\";\n    var dps = [];\n\n    _.each(gts.v, function(value) {\n      // Datapoint format: [ value, label]\n      dps.push([value[value.length -1], Math.floor(value[0]/1000)]);\n    });\n\n    // Metric format {target: \"Label text\", datapoints: [ datapoints objects] }\n\n    console.log({ target: metricName , datapoints: dps });\n    return { target: metricName, datapoints: dps };\n  }\n\n  /* ******************************************************/\n  /* Returns true if @value is an Array\n  /* ******************************************************/\n  isArray(value) {\n    return value && typeof value === 'object' && value instanceof Array && typeof value.length === 'number'\n      && typeof value.splice === 'function' && !(value.propertyIsEnumerable('length'));\n  }\n\n  /* ******************************************************/\n  /* Returns true if @gts is a JSON object version of a GTS\n  /* ******************************************************/\n  isGts(gts) {\n    if ((gts.c == null) || (gts.l == null) || (gts.a == null) || (gts.v == null)) {\n      return false;\n    }\n    return true;\n  }\n\n  /* ******************************************************/\n  /* Converts @date into µs since Epoch time \n  /* (Warpscript tick format) \n  /* ******************************************************/\n  convertToWarp10Time(date) {\n    date = this.parse(date);\n    return date * 1000;\n  }\n\n  /* ******************************************************/\n  /* Converts @timestamp into ISO 8601 format \n  /* ******************************************************/\n  convertToISO(timestamp) {\n    var date = new Date(Math.floor(timestamp/1000));\n    return date.toISOString();\n  }\n\n  parse(text, roundUp) {\n  if (!text) { return undefined; }\n  if (moment.isMoment(text)) { return text; }\n  if (_.isDate(text)) { return moment(text); }\n\n  var time;\n  var mathString = '';\n  var index;\n  var parseString;\n\n  if (text.substring(0, 3) === 'now') {\n    time = moment();\n    mathString = text.substring('now'.length);\n  } else {\n    index = text.indexOf('||');\n    if (index === -1) {\n      parseString = text;\n      mathString = ''; // nothing else\n    } else {\n      parseString = text.substring(0, index);\n      mathString = text.substring(index + 2);\n    }\n    // We're going to just require ISO8601 timestamps, k?\n    time = moment(parseString, moment.ISO_8601);\n  }\n\n  if (!mathString.length) {\n    return time;\n  }\n\n  return parseDateMath(mathString, time, roundUp);\n}\n\n}\n"]}