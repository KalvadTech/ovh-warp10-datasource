{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","Warp10DatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","System","import","then","editor","$watch","t","val","undefined","expr","datasource","metricFindQuery","transformToSegments","rawQuery","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;2CAMKC,yB;;;AAEX,2CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA8C;AAAA;;AAAA,4JACtCF,MADsC,EAC9BC,SAD8B;;AAE5C,gBAAKE,KAAL,GAAaH,MAAb;AACA,gBAAKE,YAAL,GAAoBA,YAApB;AACA,gBAAKE,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,eAA3C;;AAEAC,iBAAOC,MAAP,CAAc,qDAAd,EACCC,IADD,CACO,UAACC,MAAD,EAAY;;AAEjB;AACAR,mBAAOS,MAAP,CAAc,KAAd,EAAqB,UAACC,CAAD,EAAO;;AAE1B;AACA,kBAAIV,OAAOW,GAAP,IAAcC,SAAd,IAA2BZ,OAAOW,GAAP,IAAc,IAA7C,EAAmD;AACjD,sBAAKP,MAAL,CAAYS,IAAZ,GAAmBb,OAAOW,GAA1B;AACD;AACF,aAND;;AASA;AACA,kBAAKH,MAAL,GAAcA,MAAd;AACAA,mBAAOR,MAAP;AACD,WAhBD;AAN4C;AAuB7C;;;;uCAEY;AACX,mBAAO,KAAKc,UAAL,CAAgBC,eAAhB,CAAgC,KAAKX,MAArC,EACJG,IADI,CACC,KAAKL,YAAL,CAAkBc,mBAAlB,CAAsC,KAAtC,CADD,CAAP;AAEE;AACH;;;6CAEkB;AACjB,iBAAKZ,MAAL,CAAYa,QAAZ,GAAuB,CAAC,KAAKb,MAAL,CAAYa,QAApC;AACD;;;6CAEkB;AACjB,iBAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AAC1B,iBAAKX,MAAL,CAAYR,MAAZ;AACD;;;;QAxC4CF,S;;;;AA2C/CC,gCAA0BqB,WAA1B,GAAwC,8BAAxC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport './css/codemirror.css!'\nimport './css/monokai-theme.css!'\n\n\nexport class Warp10DatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.target = this.target.target || 'select metric';\n\n    System.import('/public/plugins/grafana-warp10-datasource/editor.js')\n    .then( (editor) => {\n      \n      // When CodeMirror editor change \n      $scope.$watch('val', (t) => {\n        \n        //$scope.target.expr = t;\n        if ($scope.val != undefined && $scope.val != null) {\n          this.target.expr = $scope.val;\n        }\n      });\n\n\n      // send scope to codeMirror\n      this.editor = editor;\n      editor($scope)\n    }); \n  }\n\n  getOptions() {\n    return this.datasource.metricFindQuery(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n      // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    this.editor($scope);\n  }\n}\n\nWarp10DatasourceQueryCtrl.templateUrl = './partials/query.editor.html';\n"]}